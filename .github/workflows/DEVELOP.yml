name: Develop

on:
  push:
    branches: 
    - 'test'

jobs:
  install-dependencies:
    runs-on: ubuntu-latest
    container: node:16-alpine

    steps:
      - uses: actions/checkout@v4

      - name: install dependencies
        run: yarn install --frozen-lockfile

      - name: Upload node_modules_artifact
        uses: actions/upload-artifact@v4
        with:
          name: node_modules
          path: ./node_modules

  verify-code-formatting:
    needs: install-dependencies
    runs-on: ubuntu-latest
    container: node:16-alpine

    steps:
      - uses: actions/checkout@v4

      - name: Download node_modules artifact
        uses: actions/download-artifact@v4
        with:
          name: node_modules

      - name: test prettier
        run: yarn prettier:ci

      - name: test eslint
        run: yarn lint

  run-tests:
    needs: [install-dependencies, verify-code-formatting]
    runs-on: ubuntu-latest
    container: node:16-alpine

    steps:
      - uses: actions/checkout@v4

      - name: Download node_modules artifact
        uses: actions/download-artifact@v4
        with:
          name: node_modules

      - name: unit test
        run: yarn test

      - name: e2e tests
        run: yarn e2e:ci
  
  release:
    needs: [install-dependencies, verify-code-formatting, run-unit-tests, run-e2e-tests]
    runs-on: ubuntu-latest

    env:
      image_tag: kusmier/kiosk-ui-develop:${GITHUB_SHA}

    steps:
      - uses: actions/checkout@v4
    
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build Docker Image
        run: docker build -t ${{ env.image_tag }}

      - name: Push Docker Image
        run: docker push ${{ env.image_tag }}
  
  # deploy:
  #   needs: [install-dependencies, verify-code-formatting, run-unit-tests, run-e2e-tests, release]
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Trigger deploy webhook
  #       run: curl --request POST '${{ secrets.DEPLOY_WEBHOOK_URL_REST }}'